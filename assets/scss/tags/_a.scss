@use '../variables';
@use '../mixins';

a {

    position: relative;
    text-decoration: none;

    &:hover,
    &:focus,
    &:focus-visible,
    &:focus-within {

        // Add general hover effect here
    }

    // All buttons
    &.btn {

        color: variables.$btn-default-color;
        background-color: variables.$btn-default-backgroundColor;

        font-size: variables.$btn-default-fontSize;
        line-height: variables.$btn-default-lineHeight;
        font-weight: variables.$btn-default-fontWeight;
        padding: variables.$btn-default-padding;
        border-radius: variables.$btn-default-borderRadius;

        text-align: center;
        max-width: max-content;
        display: flex;

        transition: variables.$btn-default-transition;

        &:hover {


        }

        // Primary
        &.btn-primary {

            color: variables.$btn-primary-color;
            background: variables.$btn-primary-backgroundColor;
            font-size: variables.$btn-primary-fontSize;

            &:hover {


            }
        }

        // Secondary
        &.btn-secondary {

            color: variables.$clr-white;
            background: variables.$clr-primary;
            border: .1rem solid variables.$clr-white;

            &:hover {


            }
        }  

        // Quaternary
        &.btn-tertiary {

            color: variables.$btn-tertiary-color;
            background: variables.$btn-tertiary-backgroundColor;

            &:hover {


            }            
        }

        // Buttons with icons
        // The Icon itself is added via a classname containing the icon name: 
        // <a class="btn primary icon-left icon-clock">
        // Icons are specified in the variables.scss
        &.icon {

            // Icon on left side
            &-left {

                padding-left: variables.$btn-default-paddingWithButtonIcon;

                &::after {

                    @include mixins.icon(left);
                }
            }

            // Icon on right side
            &-right {

                padding-right: variables.$btn-default-paddingWithButtonIcon;

                &::after {

                    @include mixins.icon(right);
                }
            }

            &:hover {

                // override button hover if necessary
            }
        }
    }
}